par(mfrow=c(1,2), mar=c(0,0,0,0), oma=c(0,1.5,2.3,0.5), family = "Lato")
require(prettyGraphs)
plot(p,
vertex.color=vertex_attr(p)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(p)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey75", 1),
edge.curved=0.15,
layout=layout.matrix.1)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
plot(b,
vertex.color=vertex_attr(b)$cor,
vertex.label=NA,
vertex.size=1/5*degree(b)+4,
edge.width=.3,
edge.arrow.size=.5,
edge.color=add.alpha("grey80", 0.5),
edge.curved=0.2,
layout=layout.matrix.2)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
dev.off()
svg("2020/Figures/fw_mod_topo.svg", width=20, height=10)
par(mfrow=c(1,2), mar=c(0,0.5,0,0), oma=c(0,1.5,2.3,0.5), family = "Lato")
require(prettyGraphs)
plot(p,
vertex.color=vertex_attr(p)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(p)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey75", 1),
edge.curved=0.15,
layout=layout.matrix.1)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
plot(b,
vertex.color=vertex_attr(b)$cor,
vertex.label=NA,
vertex.size=1/5*degree(b)+4,
edge.width=.3,
edge.arrow.size=.5,
edge.color=add.alpha("grey80", 0.5),
edge.curved=0.2,
layout=layout.matrix.2)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
dev.off()
layout.matrix.1[,2] <- jitter(troph.net1$TL, 1) # y-axis value based on trophic level
layout.matrix.1[,1] <- jitter(mod_by_red[[1]]$membership, 1) # randomly assign along x-axis
layout.matrix.2[,2] <- jitter(troph.net2$TL, 0.4) # y-axis value based on trophic level
layout.matrix.2[,1] <- jitter(mod_by_red[[2]]$membership, 1.4) # randomly assign along x-axis
svg("2020/Figures/fw_mod_topo.svg", width=20, height=10)
par(mfrow=c(1,2), mar=c(0,0.5,0,0), oma=c(0,1.5,2.3,0.5), family = "Lato")
require(prettyGraphs)
plot(p,
vertex.color=vertex_attr(p)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(p)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey75", 1),
edge.curved=0.15,
layout=layout.matrix.1)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
plot(b,
vertex.color=vertex_attr(b)$cor,
vertex.label=NA,
vertex.size=1/5*degree(b)+4,
edge.width=.3,
edge.arrow.size=.5,
edge.color=add.alpha("grey80", 0.5),
edge.curved=0.2,
layout=layout.matrix.2)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
dev.off()
layout.matrix.1[,2] <- jitter(troph.net1$TL, 1) # y-axis value based on trophic level
layout.matrix.1[,1] <- jitter(mod_by_red[[1]]$membership, 1) # randomly assign along x-axis
layout.matrix.2[,2] <- jitter(troph.net2$TL, 0.4) # y-axis value based on trophic level
layout.matrix.2[,1] <- jitter(mod_by_red[[2]]$membership, 1.4) # randomly assign along x-axis
svg("2020/Figures/fw_mod_topo.svg", width=20, height=10)
par(mfrow=c(1,2), mar=c(0,0.5,0,0), oma=c(0,1.5,2.3,0.5), family = "Lato")
require(prettyGraphs)
plot(p,
vertex.color=vertex_attr(p)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(p)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey75", 1),
edge.curved=0.15,
layout=layout.matrix.1)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
plot(b,
vertex.color=vertex_attr(b)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(b)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey75", 1),
edge.curved=0.15,
layout=layout.matrix.2)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
dev.off()
layout.matrix.1[,2] <- jitter(troph.net1$TL, 1) # y-axis value based on trophic level
layout.matrix.1[,1] <- jitter(mod_by_red[[1]]$membership, 1) # randomly assign along x-axis
layout.matrix.2[,2] <- jitter(troph.net2$TL, 0.4) # y-axis value based on trophic level
layout.matrix.2[,1] <- jitter(mod_by_red[[2]]$membership, 1) # randomly assign along x-axis
svg("2020/Figures/fw_mod_topo.svg", width=20, height=10)
par(mfrow=c(1,2), mar=c(0,0.5,0,0), oma=c(0,1.5,2.3,0.5), family = "Lato")
require(prettyGraphs)
plot(p,
vertex.color=vertex_attr(p)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(p)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey75", 1),
edge.curved=0.15,
layout=layout.matrix.1)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
plot(b,
vertex.color=vertex_attr(b)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(b)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey75", 1),
edge.curved=0.15,
layout=layout.matrix.2)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
dev.off()
layout.matrix.1[,2] <- jitter(troph.net1$TL, 1) # y-axis value based on trophic level
layout.matrix.1[,1] <- jitter(mod_by_red[[1]]$membership, 1.1) # randomly assign along x-axis
layout.matrix.2[,2] <- jitter(troph.net2$TL, 0.4) # y-axis value based on trophic level
layout.matrix.2[,1] <- jitter(mod_by_red[[2]]$membership, 1.1) # randomly assign along x-axis
svg("2020/Figures/fw_mod_topo.svg", width=20, height=10)
par(mfrow=c(1,2), mar=c(0,0.5,0,0), oma=c(0,1.5,2.3,0.5), family = "Lato")
require(prettyGraphs)
plot(p,
vertex.color=vertex_attr(p)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(p)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey75", 1),
edge.curved=0.15,
layout=layout.matrix.1)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
plot(b,
vertex.color=vertex_attr(b)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(b)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey75", 1),
edge.curved=0.15,
layout=layout.matrix.2)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
dev.off()
layout.matrix.1[,2] <- jitter(troph.net1$TL, 1) # y-axis value based on trophic level
layout.matrix.1[,1] <- jitter(mod_by_red[[1]]$membership, 1) # randomly assign along x-axis
layout.matrix.2[,2] <- jitter(troph.net2$TL, 0.4) # y-axis value based on trophic level
layout.matrix.2[,1] <- jitter(mod_by_red[[2]]$membership, 1.2) # randomly assign along x-axis
svg("2020/Figures/fw_mod_topo.svg", width=20, height=10)
par(mfrow=c(1,2), mar=c(0,0.5,0,0), oma=c(0,1.5,2.3,0.5), family = "Lato")
require(prettyGraphs)
plot(p,
vertex.color=vertex_attr(p)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(p)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey75", 1),
edge.curved=0.15,
layout=layout.matrix.1)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
plot(b,
vertex.color=vertex_attr(b)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(b)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey75", 1),
edge.curved=0.15,
layout=layout.matrix.2)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
dev.off()
layout.matrix.1[,2] <- jitter(troph.net1$TL, 1) # y-axis value based on trophic level
layout.matrix.1[,1] <- jitter(mod_by_red[[1]]$membership, 1.1) # randomly assign along x-axis
layout.matrix.2[,2] <- jitter(troph.net2$TL, 0.4) # y-axis value based on trophic level
layout.matrix.2[,1] <- jitter(mod_by_red[[2]]$membership, 1.1) # randomly assign along x-axis
svg("2020/Figures/fw_mod_topo.svg", width=20, height=10)
par(mfrow=c(1,2), mar=c(0,0.5,0,0), oma=c(0,1.5,2.3,0.5), family = "Lato")
require(prettyGraphs)
plot(p,
vertex.color=vertex_attr(p)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(p)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey75", 1),
edge.curved=0.15,
layout=layout.matrix.1)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
plot(b,
vertex.color=vertex_attr(b)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(b)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey75", 1),
edge.curved=0.15,
layout=layout.matrix.2)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
dev.off()
layout.matrix.1[,2] <- jitter(troph.net1$TL, 1) # y-axis value based on trophic level
layout.matrix.1[,1] <- jitter(mod_by_red[[1]]$membership, 1.1) # randomly assign along x-axis
layout.matrix.2[,2] <- jitter(troph.net2$TL, 0.4) # y-axis value based on trophic level
layout.matrix.2[,1] <- jitter(mod_by_red[[2]]$membership, 1.2) # randomly assign along x-axis
svg("2020/Figures/fw_mod_topo.svg", width=20, height=10)
par(mfrow=c(1,2), mar=c(0,0.5,0,0), oma=c(0,1.5,2.3,0.5), family = "Lato")
require(prettyGraphs)
plot(p,
vertex.color=vertex_attr(p)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(p)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey75", 1),
edge.curved=0.15,
layout=layout.matrix.1)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
plot(b,
vertex.color=vertex_attr(b)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(b)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey75", 1),
edge.curved=0.15,
layout=layout.matrix.2)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
dev.off()
layout.matrix.1[,2] <- jitter(troph.net1$TL, 1) # y-axis value based on trophic level
layout.matrix.1[,1] <- jitter(mod_by_red[[1]]$membership, 1.2) # randomly assign along x-axis
layout.matrix.2[,2] <- jitter(troph.net2$TL, 0.4) # y-axis value based on trophic level
layout.matrix.2[,1] <- jitter(mod_by_red[[2]]$membership, 1.4) # randomly assign along x-axis
svg("2020/Figures/fw_mod_topo.svg", width=20, height=10)
par(mfrow=c(1,2), mar=c(0,0.5,0,0), oma=c(0,1.5,2.3,0.5), family = "Lato")
require(prettyGraphs)
plot(p,
vertex.color=vertex_attr(p)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(p)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey75", 1),
edge.curved=0.15,
layout=layout.matrix.1)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
plot(b,
vertex.color=vertex_attr(b)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(b)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey75", 1),
edge.curved=0.15,
layout=layout.matrix.2)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
dev.off()
layout.matrix.1[,2] <- jitter(troph.net1$TL, 1) # y-axis value based on trophic level
layout.matrix.1[,1] <- jitter(mod_by_red[[1]]$membership, 1.2) # randomly assign along x-axis
layout.matrix.2[,2] <- jitter(troph.net2$TL, 0.4) # y-axis value based on trophic level
layout.matrix.2[,1] <- jitter(mod_by_red[[2]]$membership, 1.3) # randomly assign along x-axis
svg("2020/Figures/fw_mod_topo.svg", width=20, height=10)
par(mfrow=c(1,2), mar=c(0,0.5,0,0), oma=c(0,1.5,2.3,0.5), family = "Lato")
require(prettyGraphs)
plot(p,
vertex.color=vertex_attr(p)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(p)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey75", 1),
edge.curved=0.15,
layout=layout.matrix.1)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
plot(b,
vertex.color=vertex_attr(b)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(b)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey75", 1),
edge.curved=0.15,
layout=layout.matrix.2)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
dev.off()
layout.matrix.1[,2] <- jitter(troph.net1$TL, 1) # y-axis value based on trophic level
layout.matrix.1[,1] <- jitter(mod_by_red[[1]]$membership, 1.2) # randomly assign along x-axis
layout.matrix.2[,2] <- jitter(troph.net2$TL, 0.4) # y-axis value based on trophic level
layout.matrix.2[,1] <- jitter(mod_by_red[[2]]$membership, 1.3) # randomly assign along x-axis
svg("2020/Figures/fw_mod_topo.svg", width=20, height=10)
par(mfrow=c(1,2), mar=c(0,0.5,0,0), oma=c(0,1.5,2.3,0.5), family = "Lato")
require(prettyGraphs)
plot(p,
vertex.color=vertex_attr(p)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(p)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey80", 1),
edge.curved=0.15,
layout=layout.matrix.1)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
plot(b,
vertex.color=vertex_attr(b)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(b)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey80", 1),
edge.curved=0.15,
layout=layout.matrix.2)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
dev.off()
layout.matrix.1[,2] <- jitter(troph.net1$TL, 1) # y-axis value based on trophic level
layout.matrix.1[,1] <- jitter(mod_by_red[[1]]$membership, 1.2) # randomly assign along x-axis
layout.matrix.2[,2] <- jitter(troph.net2$TL, 0.4) # y-axis value based on trophic level
layout.matrix.2[,1] <- jitter(mod_by_red[[2]]$membership, 1.3) # randomly assign along x-axis
svg("2020/Figures/fw_mod_topo.svg", width=20, height=10)
par(mfrow=c(1,2), mar=c(0,0.5,0,0), oma=c(0,1.5,2.3,0.5), family = "Lato")
require(prettyGraphs)
plot(p,
vertex.color=vertex_attr(p)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(p)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey80", 1),
edge.curved=0.15,
layout=layout.matrix.1)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
plot(b,
vertex.color=vertex_attr(b)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(b)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey80", 1),
edge.curved=0.15,
layout=layout.matrix.2)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
dev.off()
layout.matrix.1[,2] <- jitter(troph.net1$TL, 1) # y-axis value based on trophic level
layout.matrix.1[,1] <- jitter(mod_by_red[[1]]$membership, 1.2) # randomly assign along x-axis
layout.matrix.2[,2] <- jitter(troph.net2$TL, 0.4)
layout.matrix.2[,1] <- jitter(mod_by_red[[2]]$membership, 1.4)
svg("2020/Figures/fw_mod_topo.svg", width=20, height=10)
par(mfrow=c(1,2), mar=c(0,0.5,0,0), oma=c(0,1.5,2.3,0.5), family = "Lato")
require(prettyGraphs)
plot(p,
vertex.color=vertex_attr(p)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(p)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey80", 1),
edge.curved=0.15,
layout=layout.matrix.1)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
plot(b,
vertex.color=vertex_attr(b)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(b)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey80", 1),
edge.curved=0.15,
layout=layout.matrix.2)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
dev.off()
layout.matrix.1[,2] <- jitter(troph.net1$TL, 1.1) # y-axis value based on trophic level
layout.matrix.1[,1] <- jitter(mod_by_red[[1]]$membership, 1.2) # randomly assign along x-axis
layout.matrix.2[,2] <- jitter(troph.net2$TL, 0.4)
layout.matrix.2[,1] <- jitter(mod_by_red[[2]]$membership, 1.4)
svg("2020/Figures/fw_mod_topo.svg", width=20, height=10)
par(mfrow=c(1,2), mar=c(0,0.5,0,0), oma=c(0,1.5,2.3,0.5), family = "Lato")
require(prettyGraphs)
plot(p,
vertex.color=vertex_attr(p)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(p)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey80", 1),
edge.curved=0.15,
layout=layout.matrix.1)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
plot(b,
vertex.color=vertex_attr(b)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(b)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey80", 1),
edge.curved=0.15,
layout=layout.matrix.2)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
dev.off()
layout.matrix.1[,2] <- jitter(troph.net1$TL, 1.05) # y-axis value based on trophic level
layout.matrix.1[,1] <- jitter(mod_by_red[[1]]$membership, 1.2) # randomly assign along x-axis
layout.matrix.2[,2] <- jitter(troph.net2$TL, 0.4)
layout.matrix.2[,1] <- jitter(mod_by_red[[2]]$membership, 1.4)
svg("2020/Figures/fw_mod_topo.svg", width=20, height=10)
par(mfrow=c(1,2), mar=c(0,0.5,0,0), oma=c(0,1.5,2.3,0.5), family = "Lato")
require(prettyGraphs)
plot(p,
vertex.color=vertex_attr(p)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(p)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey80", 1),
edge.curved=0.15,
layout=layout.matrix.1)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
plot(b,
vertex.color=vertex_attr(b)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(b)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey80", 1),
edge.curved=0.15,
layout=layout.matrix.2)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
dev.off()
# Add colors with topological roles to nodes
colnet <- c("#833f8f", "#ccb7d5","#a8d9c3", "#088a4f")
hcp <- hub_connp %>% mutate(type = factor(type)) %>% arrange(node) %>% mutate(col=as.numeric(type), TL=troph.net1[,1])
V(p)$color <- colnet[hcp$col]
hcb <- hub_connb %>% mutate(type = factor(type)) %>% arrange(node) %>% mutate(col=as.numeric(type), TL=troph.net2[,1])
V(b)$color <- colnet[hcb$col]
svg("2020/Figures/fw_mod_topo.svg", width=20, height=10)
par(mfrow=c(1,2), mar=c(0,0.5,0,0), oma=c(0,1.5,2.3,0.5), family = "Lato")
require(prettyGraphs)
plot(p,
vertex.color=vertex_attr(p)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(p)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey80", 1),
edge.curved=0.15,
layout=layout.matrix.1)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
plot(b,
vertex.color=vertex_attr(b)$cor,
vertex.frame.color="white",
vertex.label=NA,
vertex.size=1/5*degree(b)+5,
edge.width=.4,
edge.arrow.size=F,
edge.color=add.alpha("grey80", 1),
edge.curved=0.15,
layout=layout.matrix.2)
axis(side=2, at=t1(1:5), labels=1:5, las=1, col=NA, col.ticks=1)
dev.off()
svg("2020/Figures/fw_legend.svg", width=5, height=5)
par(mfrow=c(1,1), mar=c(0,2,0,0), oma=c(0,1.5,2.3,0.5), family = "Lato")
# Add legend
plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n")
legend("top", legend = c("Network connector", "Module connector", "Module hub", "Module specialist"), col=colnet, pch=19, cex=1, xpd=TRUE, inset=c(0,0), title="Topological roles:")
dev.off()
svg("2020/Figures/fw_legend.svg", width=5, height=5)
par(mfrow=c(1,1), mar=c(0,2,0,0), oma=c(0,1.5,2.3,0.5), family = "Lato")
# Add legend
plot(0, 0, type="n", bty="n", xaxt="n", yaxt="n")
legend("top", legend = c("Network connector", "Module connector", "Module specialist", "Module hub"), col=colnet, pch=19, cex=1, xpd=TRUE, inset=c(0,0), title="Topological roles:")
dev.off()
